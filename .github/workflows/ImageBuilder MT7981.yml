# 这是帮助您开始使用 Actions 的基本工作流程

name: ImageBuilder MT7981

# 控制工作流程何时运行
on:
  # 允许您从“操作”选项卡手动运行此工作流程
  workflow_dispatch:
    inputs:
      release:
        description: 将编译出的镜像上传到 Release
        required: false
        default: 'false'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DOWNLOAD_BASE: https://downloads.immortalwrt.org
  VENDOR: immortalwrt

# 工作流程运行由一个或多个可以顺序或并行运行的作业组成
jobs:
  # 该工作流程包含一个名为“build”的作业
  ImageBuilder_ImmortalWrt:
    # 作业将在其上运行的运行器的类型
    runs-on: ubuntu-22.04

    # 步骤表示将作为作业的一部分执行的一系列任务
    steps:
      - name: 正在载入Ubuntu
        run: |
          sudo apt -qq update
          sudo apt -qq install build-essential libncurses5-dev libncursesw5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip qemu-utils mkisofs python3-distutils zstd
          sudo timedatectl set-timezone "Asia/Shanghai"
          echo "DATE=$(TZ=UTC-8 date +%Y%m%d)" >> $GITHUB_ENV
          echo "DATETIME=$(TZ=UTC-8 date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
      
      # 在 $GITHUB_WORKSPACE 下签出您的存储库，以便您的作业可以访问它
      - name: 查看进程
        uses: actions/checkout@v4
        with: 
          path: origin

      - name: 下载镜像生成器
        run: |
          wget $DOWNLOAD_BASE/snapshots/targets/mediatek/filogic/$VENDOR-imagebuilder-mediatek-filogic.Linux-x86_64.tar.zst
          tar -I zstd -xvf $VENDOR-imagebuilder-mediatek-filogic.Linux-x86_64.tar.zst
          rm -rf $VENDOR-imagebuilder-mediatek-filogic.Linux-x86_64.tar.zst
          cp -r $GITHUB_WORKSPACE/origin/* $GITHUB_WORKSPACE/$VENDOR-imagebuilder-mediatek-filogic.Linux-x86_64
      
      - name: 运行补丁和 DIY 脚本
        working-directory: ${{ env.VENDOR }}-imagebuilder-mediatek-filogic.Linux-x86_64
        run: |
          bash scripts/builder-patch.sh

      - name: 生成固件
        working-directory: ${{ env.VENDOR }}-imagebuilder-mediatek-filogic.Linux-x86_64
        run: |
          bash build.sh

      - name: 上传固件发布
        if: github.event.inputs.release == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ env.GITHUB_TOKEN }}
          file_glob: true
          file: ${{ env.VENDOR }}-imagebuilder-mediatek-filogic.Linux-x86_64/bin/targets/mediatek/filogic/*
          asset_name: ${{ github.event.repository.name }}-${{ github.sha }}
          tag: ${{ env.VENDOR }}-mediatek_filogic-${{ env.DATETIME }}
          overwrite: true
          
      - name: 删除旧的工作流程
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 0
          keep_minimum_runs: 1
